apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  labels:
    app.kubernetes.io/name: django_app
    app.kubernetes.io/component: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: django_app
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django_app
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: django
          image: django_app:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: django-secrets
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  selector:
    app.kubernetes.io/name: django_app
    app.kubernetes.io/component: web
  ports:
    - name: http
      protocol: TCP
      port: 8888
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-ingress
spec:
  rules:
    - host: star-burger.test
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: django-service
                port:
                  name: http
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: django-clearsessions-once
spec:
  schedule: "0 */2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: django-clearsessions
            image: django_app:latest
            imagePullPolicy: IfNotPresent
            command:
              - python
              - manage.py
              - clearsessions
          restartPolicy: OnFailure